name: Continuous Integration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings"

jobs:
  style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      - name: Style Check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-python@v1
      - name: Install Pylint
        run: |
          python -m pip install --upgrade pip
          python -m pip install pylint

      - name: Run Pylint
        working-directory: py/miniconf-mqtt
        run: |
          python -m pip install .
          python -m pylint miniconf

  documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: thumbv7em-none-eabihf
          override: true

      - name: Cargo Doc
        uses: actions-rs/cargo@v1
        with:
          command: doc

  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cargo Audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  compile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - 1.65.0  # keep in sync with manifest MSRV
        target:
          - thumbv7em-none-eabihf

    steps:
      - uses: actions/checkout@v2
      - name: Install Rust ${{ matrix.toolchain }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
          override: true

      - name: Cargo Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --verbose --target ${{ matrix.target }}

      - name: Cargo Build [No-Features]
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --no-default-features --target ${{ matrix.target }}

      - name: Cargo Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target ${{ matrix.target }}

      - name: Cargo Build [Release]
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Cargo Build [Examples]
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --examples

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - 1.65.0  # keep in sync with manifest MSRV
        args:
          - ""
          - --all-features
          - --no-default-features
          - --no-default-features --features json-core

    steps:
      - uses: actions/checkout@v2

      - name: Start Mosquitto
        run: |
          sudo apt-get install mosquitto
          sudo service mosquitto start

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: ${{ matrix.toolchain }}
          profile: minimal

      - name: Cargo Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: ${{ matrix.args }}

  examples:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example:
          - mqtt
    steps:
      - uses: actions/checkout@v2

      - name: Start Mosquitto
        run: |
          sudo apt-get install mosquitto
          sudo service mosquitto start

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: stable
          profile: minimal

      - name: Example ${{matrix.example}}
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --example ${{matrix.example}}
